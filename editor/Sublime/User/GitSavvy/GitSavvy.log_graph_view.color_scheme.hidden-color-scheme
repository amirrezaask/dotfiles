{
	"author": "Heiker (https://github.com/VonHeikemen)",
	"comment": "A port of Sarah Drasner's Night Owl VSCode theme",
	"globals":
	{
		"background": "var(black)",
		"caret": "var(light_blue)",
		"find_highlight": "var(cold_blue)",
		"find_highlight_foreground": "var(darkness)",
		"foreground": "var(white)",
		"inactive_selection": "var(fuchsia_blue)",
		"line_highlight": "var(dark_blue)",
		"selection": "var(sad_blue)"
	},
	"name": "Night owl",
	"rules":
	[
		{
			"background": "#199",
			"foreground": "#1991",
			"name": "GitSavvy Highlighted Matching Commit",
			"scope": "git_savvy.graph.matching_commit"
		},
		{
			"background": "#99991109",
			"foreground": "#19d",
			"name": "GitSavvy Highlighted Path Char Above",
			"scope": "git_savvy.graph.path_char.above"
		},
		{
			"background": "#99991109",
			"foreground": "#f91d",
			"name": "GitSavvy Highlighted Commit Dot Above",
			"scope": "git_savvy.graph.dot.above"
		},
		{
			"background": "#99991109",
			"foreground": "#991",
			"name": "GitSavvy Highlighted Path Char",
			"scope": "git_savvy.graph.path_char"
		},
		{
			"background": "#991",
			"foreground": "#9911",
			"name": "GitSavvy Highlighted Commit Dot",
			"scope": "git_savvy.graph.dot"
		},
		{
			"font_style": "italic",
			"foreground": "var(gray)",
			"name": "Comment",
			"scope": "comment"
		},
		{
			"foreground": "var(red)",
			"name": "Constant",
			"scope": "constant"
		},
		{
			"foreground": "var(orange_ish)",
			"name": "Number",
			"scope": "constant.numeric"
		},
		{
			"foreground": "var(white)",
			"name": "Entity",
			"scope": "entity"
		},
		{
			"background": "var(wild_pink)",
			"foreground": "var(light)",
			"name": "Invalid",
			"scope": "invalid"
		},
		{
			"foreground": "var(magenta)",
			"name": "Keyword",
			"scope": "keyword, punctuation.accessor, storage.modifier"
		},
		{
			"foreground": "var(magenta)",
			"name": "Storage",
			"scope": "storage"
		},
		{
			"foreground": "var(blue)",
			"name": "Function",
			"scope": "variable.function, support.function"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "String",
			"scope": "string"
		},
		{
			"foreground": "var(yellow)",
			"name": "String quoted",
			"scope": "string.quoted"
		},
		{
			"foreground": "var(light_lime_green)",
			"name": "String quoted - punctuation",
			"scope": "string.quoted punctuation.definition.string"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "Support",
			"scope": "support"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "Variable",
			"scope": "variable.language"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "Class constructor name",
			"scope": "entity.name.class"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "Class inherited class",
			"scope": "entity.other.inherited-class"
		},
		{
			"foreground": "var(blue)",
			"name": "Class constructor function",
			"scope": "entity.name.function.constructor"
		},
		{
			"foreground": "var(blue)",
			"name": "Function name",
			"scope": "entity.name.function"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "Meta Tag",
			"scope": "meta.tag punctuation.definition.tag"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "Tag names",
			"scope": "entity.name.tag"
		},
		{
			"font_style": "italic",
			"foreground": "var(greenish_yellow)",
			"name": "Tag attribute",
			"scope": "meta.tag entity.other.attribute-name"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "Tag key-val separator",
			"scope": "meta.tag meta.attribute-with-value punctuation.separator.key-value"
		},
		{
			"foreground": "var(git_green)",
			"name": "[GitGutter] Inserted",
			"scope": "markup.inserted.git_gutter"
		},
		{
			"foreground": "var(git_orange)",
			"name": "[GitGutter] Modified",
			"scope": "markup.changed.git_gutter"
		},
		{
			"foreground": "var(git_red)",
			"name": "[GitGutter] Deleted",
			"scope": "markup.deleted.git_gutter"
		},
		{
			"foreground": "var(git_gray)",
			"name": "[GitGutter] Ignored",
			"scope": "markup.ignored.git_gutter"
		},
		{
			"foreground": "var(linter_yellow)",
			"name": "[SublimeLinter] Warning",
			"scope": "sublimelinter.mark.warning"
		},
		{
			"foreground": "var(linter_red)",
			"name": "[SublimeLinter] Error",
			"scope": "sublimelinter.mark.error"
		},
		{
			"foreground": "var(linter_blue)",
			"name": "[SublimeLinter] Gutter mark",
			"scope": "sublimelinter.gutter-mark"
		},
		{
			"foreground": "var(yellow)",
			"name": "[Javascript] String",
			"scope": "source.js string"
		},
		{
			"foreground": "var(light_lime_green)",
			"name": "String quoted - template punctuation",
			"scope": "source.js string.template.js punctuation.definition.string.template"
		},
		{
			"foreground": "var(red)",
			"name": "[Javascript] String - Template expression",
			"scope": "source.js punctuation.definition.template-expression.begin.js, source.js punctuation.definition.template-expression.end.js"
		},
		{
			"foreground": "var(blue)",
			"name": "[Javascript] Undefined",
			"scope": "source.js constant.language.undefined.js"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[Javascript] Class constructor call",
			"scope": "source.js meta.function-call.constructor.js variable.type.js"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[Javascript] Built-in Class constructor call",
			"scope": "source.js meta.function-call.constructor.js support.class"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Javascript] Operator - New",
			"scope": "source.js keyword.operator.word.new.js"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Javascript] Class - super",
			"scope": "source.js meta.class.js meta.block.js meta.block.js meta.function-call.js support.function.js"
		},
		{
			"foreground": "var(white)",
			"name": "[Javascript] Support property dom",
			"scope": "source.js support.constant.dom"
		},
		{
			"foreground": "var(white)",
			"name": "[Javascript] Class - reference",
			"scope": "source.js support.class.js"
		},
		{
			"foreground": "var(blue)",
			"name": "[Javascript] Method call",
			"scope": "source.js meta.function-call.method.js support.function"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "[Javascript] Console method call",
			"scope": "source.js meta.function-call.method.js support.function.console"
		},
		{
			"foreground": "var(white)",
			"name": "[Javascript] Support node",
			"scope": "source.js support.module.node.js"
		},
		{
			"foreground": "var(magenta)",
			"name": "[Javascript Babel] Extends - keyword",
			"scope": "source.js meta.class.js storage.type.extends.js"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Javascript Babel] Class - super",
			"scope": "source.js meta.class.js meta.group.braces.curly.js variable.language.super.js"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Javascript Babel] Class - new",
			"scope": "source.js meta.instance.constructor.js keyword.operator.new.js"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[Javascript Babel] Class - support",
			"scope": "source.js meta.instance.constructor.js support.class"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[Javascript Babel] Class - constructor call",
			"scope": "source.js meta.instance.constructor.js variable.function.constructor.js"
		},
		{
			"foreground": "var(light_lime_green)",
			"name": "[Javascript Babel] String quoted - template punctuation",
			"scope": "source.js string.interpolated.js keyword.other.template"
		},
		{
			"foreground": "var(red)",
			"name": "[Javascript Babel] String quoted - template expression",
			"scope": "source.js string.interpolated.js keyword.other.substitution"
		},
		{
			"foreground": "var(white)",
			"name": "[Javascript Babel] Object - unquoted key",
			"scope": "source.js constant.other.object.key.js string.unquoted.label.js"
		},
		{
			"foreground": "var(white)",
			"name": "[Javascript Babel] Object - separator",
			"scope": "source.js constant.other.object.key.js punctuation.separator.key-value.js"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "[Javascript] Console method call",
			"scope": "source.js support.function.console.js"
		},
		{
			"foreground": "var(orange_ish)",
			"name": "[Javascript Babel] JSX tag",
			"scope": "source.js meta.jsx.js meta.tag.jsx entity.name.tag.jsx"
		},
		{
			"font_style": "italic",
			"foreground": "var(greenish_yellow)",
			"name": "[Javascript Babel] JSX attribute",
			"scope": "source.js meta.jsx.js entity.other.attribute-name.jsx"
		},
		{
			"foreground": "var(red)",
			"name": "[Javascript Babel] JSX expression punctuation",
			"scope": "source.js meta.jsx.js meta.embedded.expression.jsx punctuation.section.embedded"
		},
		{
			"foreground": "var(blue)",
			"name": "[Typescript] Decorator",
			"scope": "source.ts meta.decorator.ts punctuation.decorator.ts"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[Typescript] Class",
			"scope": "source.ts meta.class.ts entity.name.type.class.ts"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[Typescript] Type annotation class",
			"scope": "source.ts meta.class.ts meta.type.annotation.ts entity.name.type.ts"
		},
		{
			"foreground": "var(orange_ish)",
			"name": "[Simple JSX] Meta Tag",
			"scope": "source.jsx meta.tag.other entity.name.tag.other"
		},
		{
			"foreground": "var(orange_ish)",
			"name": "[VSCode JSX] Component name",
			"scope": "source.js meta.tag entity.name.tag support.class.component.js"
		},
		{
			"foreground": "var(red)",
			"name": "[VSCode JSX] Embedded expressions",
			"scope": "source.js meta.embedded.expression.js.jsx punctuation.section.embedded"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[VSCode JSX] Class - name",
			"scope": "source.js.jsx meta.class.js.jsx entity.name.type.class.js.jsx"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[VSCode JSX] Class - new",
			"scope": "source.js.jsx new.expr.js.jsx keyword.operator.new.js.jsx"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[VSCode JSX] Entity",
			"scope": "source.js.jsx new.expr.js.jsx entity.name.type.js.jsx"
		},
		{
			"foreground": "var(white)",
			"name": "[VSCode JSX] String - template variable",
			"scope": "source.js.jsx new.expr.js.jsx string.template.js.jsx meta.template.expression.js.jsx variable.other"
		},
		{
			"foreground": "var(white)",
			"name": "[VSCode JSX] Support dom property",
			"scope": "source.js.jsx support.variable.property.dom.js.jsx"
		},
		{
			"font_style": "italic",
			"foreground": "var(greenish_yellow)",
			"name": "[Vue] Directive symbol",
			"scope": "text.html.vue punctuation.definition.attribute.html"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Vue] Attribute assignment",
			"scope": "text.html.vue punctuation.separator.key-value.html"
		},
		{
			"foreground": "var(blue)",
			"name": "[PHP] Built-in function",
			"scope": "embedding.php support.function"
		},
		{
			"foreground": "var(blue)",
			"name": "[PHP] Function variable",
			"scope": "embedding.php meta.function-call.invoke.php variable.other.php"
		},
		{
			"foreground": "var(peach_orange)",
			"name": "[PHP] Class - reference",
			"scope": "embedding.php support.class.php"
		},
		{
			"foreground": "var(white)",
			"name": "[PHP] Class - constant",
			"scope": "embedding.php constant.other.class.php"
		},
		{
			"foreground": "var(white)",
			"name": "[PHP] Namespace path",
			"scope": "embedding.php support.other.namespace"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[PHP] keyword - new",
			"scope": "embedding.php keyword.other.new"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[PHP] Trycatch",
			"scope": "embedding.php keyword.control.exception"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[PHP] Class static accessor",
			"scope": "embedding.php punctuation.accessor.double-colon"
		},
		{
			"foreground": "var(white)",
			"name": "[PHP] String - variable",
			"scope": "embedding.php string.quoted.double meta.string-contents.quoted.double variable.other"
		},
		{
			"foreground": "var(white)",
			"name": "[PHP] String - function parameters - punctuation",
			"scope": "embedding.php string.quoted.double.php meta.string-contents.quoted.double meta.function-call punctuation.section.group"
		},
		{
			"foreground": "var(white)",
			"name": "[PHP] String - function parameters - arrays",
			"scope": "embedding.php string.quoted.double.php meta.string-contents.quoted.double.php meta.function-call.php meta.array punctuation.section.array"
		},
		{
			"foreground": "var(red)",
			"name": "[CSS] Selector - Tag name",
			"scope": "source.css entity.name.tag.css"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "[CSS] Selector - Class",
			"scope": "source.css entity.other.attribute-name.class.css"
		},
		{
			"foreground": "var(yellow_ish)",
			"name": "[CSS] Selector - ID",
			"scope": "source.css entity.other.attribute-name.id.css"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "[CSS] Selector - Pseudo-class",
			"scope": "source.css meta.selector.css entity.other.pseudo-element.css, source.css meta.selector.css entity.other.pseudo-class.css"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[CSS] Selector - Separator",
			"scope": "source.css punctuation.separator.combinator.css"
		},
		{
			"foreground": "var(sad_cyan)",
			"name": "[CSS] Property list",
			"scope": "source.css support.type.property-name.css"
		},
		{
			"foreground": "var(pale_yellow)",
			"name": "[CSS] Value",
			"scope": "source.css meta.property-value.css constant.other.color.rgb-value.css"
		},
		{
			"foreground": "var(orange_ish)",
			"name": "[CSS] Value prefix",
			"scope": "source.css punctuation.definition.constant.css"
		},
		{
			"foreground": "var(pale_yellow)",
			"name": "[CSS] Unit",
			"scope": "source.css keyword.other.unit.css"
		},
		{
			"foreground": "var(red)",
			"name": "[CSS] Constant",
			"scope": "source.css support.constant.property-value.css"
		},
		{
			"foreground": "var(sad_cyan)",
			"name": "[CSS] Constant color",
			"scope": "source.css support.constant.color.w3c-standard-color-name.css"
		},
		{
			"foreground": "var(sad_cyan)",
			"name": "[CSS] Constant font",
			"scope": "source.css support.constant.font-name.css"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[CSS] Control block",
			"scope": "source.css meta.at-rule.media.css keyword.control.at-rule.media.css, source.css support.constant.media.css"
		},
		{
			"foreground": "var(magenta)",
			"name": "[CSS] Selector - target",
			"scope": "source.css meta.attribute-selector.css punctuation.definition.entity.css"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "[CSS] Selector - attribute",
			"scope": "source.css entity.other.attribute-name.css"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[CSS] Selector - Attribute operator",
			"scope": "source.css keyword.operator.attribute-selector.css"
		},
		{
			"foreground": "var(white)",
			"name": "[CSS] String - unquoted",
			"scope": "source.css meta.property-list.css string.unquoted.css"
		},
		{
			"font_style": "italic",
			"foreground": "var(greenish_yellow)",
			"name": "[HTML] Doctype - html",
			"scope": "text.html meta.tag.sgml.doctype.html constant.language.doctype.html"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[HTML] Doctype - declaration",
			"scope": "text.html meta.tag.sgml.doctype.html keyword.declaration.doctype.html"
		},
		{
			"background": "var(wild_pink)",
			"foreground": "var(white)",
			"name": "[HTML] String - Single quoted in single quote",
			"scope": "text.html string.quoted.single meta.tag string.quoted.single "
		},
		{
			"background": "var(wild_pink)",
			"foreground": "var(white)",
			"name": "[HTML] String - Double quoted in double quote",
			"scope": "text.html string.quoted.double meta.tag string.quoted.double "
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[HTML-like] Tag punctuation",
			"scope": "text.html punctuation.definition.tag.html"
		},
		{
			"font_style": "italic",
			"foreground": "var(greenish_yellow)",
			"name": "[HTML-like] Tag attribute",
			"scope": "text.html entity.other.attribute-name.html"
		},
		{
			"foreground": "var(blue)",
			"name": "[HTML-like] Function calls",
			"scope": "text.html meta.tag meta.function-call"
		},
		{
			"foreground": "var(white)",
			"name": "[HTML-like] String - function parameters",
			"scope": "text.html string meta.tag punctuation.definition.parameters"
		},
		{
			"foreground": "var(white)",
			"name": "[HTML-like] String - function argument other",
			"scope": "text.html string meta.tag meta.function.arguments variable.other"
		},
		{
			"foreground": "var(white)",
			"name": "[HTML-like] String - function argument array",
			"scope": "text.html string meta.tag meta.function.arguments meta.array punctuation.section"
		},
		{
			"font_style": "italic",
			"foreground": "var(gray)",
			"name": "[HTML-like] Comment - function",
			"scope": "text.html comment meta.tag meta.function-call"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Twig] Tag - attribute assign",
			"scope": "text.html.twig meta.tag.inline.any.html, text.html.twig meta.tag.block.any.html, text.html.twig source.css.embedded.html"
		},
		{
			"foreground": "var(white)",
			"name": "[Twig] Puntuation",
			"scope": "text.html.twig punctuation.section.tag.twig"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[JSON] Property",
			"scope": "source.json meta.mapping.key.json string.quoted.double.json"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[JSON] String - key punctuation",
			"scope": "source.json meta.mapping.key.json string.quoted.double.json punctuation.definition.string"
		},
		{
			"foreground": "var(magenta)",
			"name": "[JSON] String value",
			"scope": "source.json meta.mapping.value.json string.quoted.double.json"
		},
		{
			"foreground": "var(soft_blue)",
			"name": "[RegEx] Strings",
			"scope": "source.regexp, source.regexp constant"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[RegEx] Operators",
			"scope": "source.regexp keyword.operator"
		},
		{
			"foreground": "var(orange_ish)",
			"name": "[RegEx] Constant - escaped",
			"scope": "source.regexp constant.character.escape"
		},
		{
			"foreground": "var(live_blue)",
			"name": "[Markdown] Headings",
			"scope": "text.html.markdown entity.name.section.markdown, text.html.markdown punctuation.definition.heading.begin.markdown"
		},
		{
			"font_style": "italic",
			"foreground": "var(bluish_grey)",
			"name": "[Markdown] Quotes",
			"scope": "text.html.markdown meta.block-level.markdown markup.quote.markdown"
		},
		{
			"foreground": "var(live_blue)",
			"name": "[Markdown] Image",
			"scope": "text.html.markdown punctuation.definition.image"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Markdown] Image metadata",
			"scope": "text.html.markdown meta.image punctuation.definition.metadata"
		},
		{
			"foreground": "var(pink)",
			"name": "[Markdown] Image link",
			"scope": "text.html.markdown meta.image markup.underline.link"
		},
		{
			"foreground": "var(live_blue)",
			"name": "[Markdown] Link text",
			"scope": "text.html.markdown meta.link punctuation.definition.link"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Markdown] Link metadata",
			"scope": "text.html.markdown meta.link punctuation.definition.metadata"
		},
		{
			"foreground": "var(pink)",
			"name": "[Markdown] link url",
			"scope": "text.html.markdown meta.link markup.underline.link"
		},
		{
			"font_style": "bold",
			"foreground": "var(greenish_yellow)",
			"name": "[Markdown] Bold",
			"scope": "text.html.markdown markup.bold.markdown"
		},
		{
			"font_style": "italic",
			"foreground": "var(magenta)",
			"name": "[Markdown] Italic",
			"scope": "text.html.markdown markup.italic.markdown"
		},
		{
			"foreground": "var(greenish_yellow)",
			"name": "[Markdown] Raw",
			"scope": "text.html.markdown markup.raw.inline.markdown"
		},
		{
			"foreground": "var(white)",
			"name": "[Markdown] Language block name",
			"scope": "text.html.markdown constant.other.language-name.markdown"
		},
		{
			"foreground": "var(yellow)",
			"name": "[Diff] From file",
			"scope": "source.diff meta.diff.header.from-file"
		},
		{
			"foreground": "var(yellow)",
			"name": "[Diff] To file",
			"scope": "source.diff meta.diff.header.to-file"
		},
		{
			"foreground": "var(git_green)",
			"name": "[Diff] Inserted",
			"scope": "source.diff markup.inserted.diff"
		},
		{
			"foreground": "var(moderate_red)",
			"name": "[Diff] Deleted",
			"scope": "source.diff markup.deleted.diff"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Diff] Range",
			"scope": "source.diff punctuation.definition.range.diff"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Diff] Line number",
			"scope": "source.diff meta.toc-list.line-number.diff"
		},
		{
			"foreground": "var(yellow)",
			"name": "[Git commit message] From file",
			"scope": "text.git-commit meta.diff.header.from-file"
		},
		{
			"foreground": "var(yellow)",
			"name": "[Git commit message] To file",
			"scope": "text.git-commit meta.diff.header.to-file"
		},
		{
			"foreground": "var(git_green)",
			"name": "[Git commit message] Inserted",
			"scope": "text.git-commit markup.inserted.diff"
		},
		{
			"foreground": "var(moderate_red)",
			"name": "[Git commit message] Deleted",
			"scope": "text.git-commit markup.deleted.diff"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Git commit message] Range",
			"scope": "text.git-commit punctuation.definition.range.diff"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Git commit message] Line number",
			"scope": "text.git-commit meta.toc-list.line-number.diff"
		},
		{
			"foreground": "var(yellow)",
			"name": "[Find-in-files] Filename",
			"scope": "text.find-in-files entity.name.filename"
		},
		{
			"foreground": "var(light_cyan)",
			"name": "[Find-in-files] Number match",
			"scope": "text.find-in-files constant.numeric.line-number.match"
		},
		{
			"foreground": "var(cold_blue)",
			"name": "[Find-in-files] Number",
			"scope": "text.find-in-files constant.numeric.line-number"
		}
	],
	"variables":
	{
		"black": "#011627",
		"blue": "#82AAFF",
		"bluish_grey": "#697098",
		"cold_blue": "#5F7E97",
		"dark_blue": "#01121F",
		"darkness": "#000",
		"fuchsia_blue": "#7E57C25A",
		"git_gray": "#4C566A",
		"git_green": "#9CCC65",
		"git_orange": "#E2B93D",
		"git_red": "#EF5350",
		"gray": "#637777",
		"greenish_yellow": "#ADDB67",
		"light": "#FFF",
		"light_blue": "#80A4C2",
		"light_cyan": "#7FDBCA",
		"light_lime_green": "#D9F5DD",
		"linter_blue": "#64B5F6",
		"linter_red": "#EF5350",
		"linter_yellow": "#B39554",
		"live_blue": "#82B1FF",
		"magenta": "#C792EA",
		"moderate_red": "#D3423E",
		"orange_ish": "#F78C6C",
		"pale_yellow": "#FFEB95",
		"peach_orange": "#FFCB8B",
		"pink": "#FF869A",
		"red": "#FF6363",
		"sad_blue": "#1D3B53",
		"sad_cyan": "#80CBC4",
		"soft_blue": "#5CA7E4",
		"white": "#D6DEEB",
		"wild_pink": "#FF2C83",
		"yellow": "#ECC48DFF",
		"yellow_ish": "#FAD430"
	}
}
