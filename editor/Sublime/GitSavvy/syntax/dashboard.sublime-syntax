%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
# This is a base syntax which is used in
# `status`, `branch`, `rebase` and `tags`
name: GitSavvy Dashboard
hidden: true
scope: git-savvy.dashboard
contexts:
  main:
    - match: ^  (ROOT:)(.+[\\/])([^\\/]+)$
      comment: root summary
      scope: comment.git-savvy.summary-header.root-summary
      captures:
        1: comment.git-savvy.summary-header.title.root
        2: comment.git-savvy.summary-header.root.info
        3: comment.git-savvy.summary-header.root.info.tail
    - match: "^  BRANCH:"
      comment: Summary Header
      scope: comment.git-savvy.summary-header.title.branch
      push:
        - meta_scope: meta.git-savvy.summary-header
        - match: ^$
          pop: true

        - match: "(`)([^`]+)(`)"
          comment: branch names
          scope: constant.other.git-savvy.summary-header.branch
          captures:
            1: punctuation.definition.git-savvy.branch.start
            2: constant.other.git-savvy.summary-header.branch-name
            3: punctuation.definition.git-savvy.branch.end

        - match: (ahead)|(behind)
          comment: ahead or behind
          scope: keyword.other.git-savvy.summary-header.ahead-behind

        - match: (?:(onto) ([0-9a-f]{7,40}))? (\((\d+)/(\d+)\))
          captures:
            2: constant.other.git-savvy.sha1
            3: keyword.other.git-savvy.todo-progress
            4: keyword.other.git-savvy.numerator
            5: keyword.other.git-savvy.denominator

        - match: ^\s{11}(`+)\s?(.*)
          captures:
            2: string.other.git-savvy.todo-item

        - match: ^  (HEAD:)(?:\s+([0-9a-f]{7,40}) .+)?
          comment: head summary
          scope: comment.git-savvy.summary-header.head-summary
          captures:
            1: comment.git-savvy.summary-header.title.head
            2: constant.other.git-savvy.sha1

        - match: ^\s{4,11}\x{200b} +(â‹®)
          comment: line denoting we dropped some commits
          scope: meta.git-savvy.summary-header.head-summary
          captures:
            1: punctuation.other.dropped-commits.git-savvy

        - match: ^\s{4,11}([ `]+)\x{200b}(.*)
          comment: line tagging the commit hash of the previous line
          scope: meta.git-savvy.summary-header.head-summary
          captures:
            1: punctuation.other.commit-decoration.git-savvy
            2: comment.git-savvy.summary-header.head-summary constant.other.git.branch.git-savvy

        - match: ^\s{4,11}([0-9a-f]{7,40}) \x{200b}(.+)
          comment: stand-alone decoration line
          scope: comment.git-savvy.summary-header.head-summary
          captures:
            1: constant.other.git-savvy.sha1
            2: constant.other.git.branch.git-savvy

        - match: ^\s{4,11}(?:([0-9a-f]{7,40}) .+)?
          comment: stand-alone commit line
          scope: comment.git-savvy.summary-header.head-summary
          captures:
            1: constant.other.git-savvy.sha1

    - match: "^  (#{3,})"
      comment: Key-bindings menu
      captures:
        1: punctuation.definition.git-savvy.section
      push:
        - meta_scope: comment.git-savvy.key-bindings-menu

        - match: ^-\n$
          scope: comment.git-savvy.key-bindings-menu.end
          pop: true

        - match: "#{3,}"
          scope: punctuation.definition.git-savvy.section

        - match: "  (##) ([A-Z ]+) (##)"
          scope: meta.git-savvy.key-bindings-header
          captures:
            1: punctuation.definition.git-savvy.section
            2: support.type.git-savvy.key-bindings-header-text
            3: punctuation.definition.git-savvy.section

        - match: '(\[)([A-Za-z\,\.\-\?]+)(\])'
          scope: meta.git-savvy.key-bindings-key-stroke
          captures:
            1: punctuation.definition.git-savvy.key-bindings-key-stroke
            2: constant.character.git-savvy-key-binding-key
            3: punctuation.definition.git-savvy.key-bindings-key-stroke
          push:
            - match: (?=\[|$)
              pop: true
            - match: \s+([\w\s,\(\)]+)
              captures:
                1: comment.git-savvy.key-bindings-menu.key-binding-description

    - match: '(\*\*) ([^\*]+) (\*\*)'
      comment: ux note
      scope: support.type.git-savvy.ux-note
      captures:
        1: punctuation.definition.git-savvy.note
        2: support.type.git-savvy.ux-note.text
        3: punctuation.definition.git-savvy.note


