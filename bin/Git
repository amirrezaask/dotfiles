#!/usr/bin/env bash
awk_script='
BEGIN{modified_idx=0; added_idx=0; deleted_idx=0;}

{
	if ($1 == "M") {
		modified[sprintf("%d", modified_idx)]=$2; modified_idx+=1;
	} else if ($1 == "A") {
		added[sprintf("%d", added_idx)]=$2; added_idx+=1;
	} else if ($1 == "D") {
		deleted[sprintf("%d", deleted_idx)]=$2; deleted_idx+=1;
	}
}

END {
	if (modified_idx != 0) {
		printf "\t"
		print "Modified:";
		for (m in modified) {
			printf("\t\t%s\n", modified[m]);
		};
	}
	if (added_idx != 0) {
		printf "\t";
		print "Added:";
		for (a in added) {
			printf("\t\t%s\n", added[a]);
		};
	}
	if (deleted_idx != 0) {
		printf "\t";
		print "Deleted:";
		for (d in deleted) {
			printf("\t\t%s\n", deleted[d]);
		};
	}
}'

output=''

# Get unstaged files
output+=`echo ">Add\nCommit \n>Diff\n>Restore\nPush\nRefresh\n\n\n"`
output+=`echo "Unstaged:\n"`
output+=`git --no-pager diff --name-status | awk "$awk_script"`

output+=`echo "\nStaged:\n"`
output+=`git --no-pager diff --staged --name-status | awk "$awk_script"`

base=`git rev-parse --show-toplevel`

# make a new window
if [ "$1" == "" ]; then
	echo -n "" | 9p write acme/new/body
	last=$(9p ls acme | sort -g | tail -n 1)
else
	last="$1"
	echo "clean" | 9p write "acme/$last/ctl"
fi

echo "name ${base}/+Git" | 9p write "acme/$last/ctl"
printf "$output" | 9p write "acme/$last/body"
echo "clean" | 9p write "acme/$last/ctl"