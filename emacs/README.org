#+TITLE: AmirrezaAsk Emacs
#+AUTHOR: amirrezaask
* Integrated Tools
** Process management
#+begin_src emacs-lisp
  (pkg! proced
    :bind (("<f10>" . amirreza/kill-process))
    :commands (proced amirreza/kill-process)
    :config

    (defun amirreza/kill-process (name)
      (interactive "sProcess: ")
      (shell-command-to-string (format "pkill %s" name))))
#+end_src
** Rhythmbox
#+begin_src emacs-lisp
  (if-enabled? rhythmbox
               (pkg! rhythmbox
                 :bind (("C-c i m l" . Rhythmbox)
                        ("C-c i m p" . Rhythmbox/playpause-current-song)
                        ("C-c i m n" . Rhythmbox/current-song-name))
                 :load-path "~/.emacs.d/site-lisp/"))
#+end_src
** Video
#+begin_src emacs-lisp
  (defun amirreza/start-vlc (filename)
    (start-process (format "*VLC: %s*" filename) "*VLC*" "vlc" filename))

  (defvar amirreza/video-location "~/Videos")

  (defun amirreza/video-list ()
    (interactive)
    (amirreza/start-vlc (expand-file-name (completing-read "Video: " (directory-files-recursively amirreza/video-location ".*")))))
#+end_src
** Docker
#+BEGIN_SRC emacs-lisp
  (pkg! docker-compose-mode
    :straight t
    :mode "docker-compose\\.yml")

  (pkg! docker :straight t 
    :bind
    ("C-c i d" . docker))
  (pkg! dockerfile-mode :straight t :mode "\\Dockerfile\\'")
#+END_SRC
** Kubernetes
#+begin_src emacs-lisp
(pkg! kubel :straight t :commands (kubel) :bind (("C-c i k" . kubel)))
#+end_src
** Application Laucnher(dmenu)
Dmenu replacement in Emacs.
#+begin_src emacs-lisp
  (defun amirreza/run-command (cmd)
    (let* ((process-name (format "External: %s" cmd))
           (args ""))
      (when (string-match-p "\\.desktop" cmd)
        (setq args cmd)
        (setq cmd "gtk-launch"))

      (start-process process-name process-name cmd (car (last (split-string args "/"))))))

  (defun amirreza/launch ()
    (interactive)
    (let* ((bins '())
           (_ (mapc (lambda (path)
                      (ignore-errors (setq bins (append bins (directory-files-recursively path directory-files-no-dot-files-regexp))))
                      ) exec-path))
           (cmd (completing-read "Run: " bins)))
      (amirreza/run-command cmd)))

(global-set-key (kbd "s-d") 'amirreza/launch)
#+end_src
** Terminal
#+begin_src emacs-lisp
  (defvar amirreza/terminal "alacritty")
    (defun amirreza/terminal ()
      (interactive)
      (start-process (format "%s: %s" amirreza/terminal default-directory)
                     (format "%s: %s" amirreza/terminal default-directory) "alacritty"))
#+end_src
